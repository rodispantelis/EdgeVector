var textbox='';
var cn=0;
var cv=0;
var tp='undir';
var temp=Array(0);
var nodes=0;
var ev=[];
var dimac=['c'];
var crd='c Generated by \'Generate Random Graphs\' web application. https://github.com/rodispantelis/EdgeVector \n';

function cr(i,g,r){
    if(r=='1'){
        textbox+='e '+i+' '+g+'\n';
        dimac.push('e '+i+' '+g+'\n');
    }
}
function gen(){
    textbox='';
    cn=0;
    cv=0;
    tp='undir';
    temp=Array(0);
    nodes=0;
    ev=[];
    dimac=['c'];
    
    tp=prj2.value;
    
    if(tp=='tree'){
        gent();}
    else {
        geng();
    }
    graph2ev();
}
function graph2ev(){
    dim2ev();
    txt();
}
function gent(){
	var mind,maxd;
	var ar1=["1"];
	var ar2=[];
	textbox='';
	cv=0;
	nn=1;
	var c=true;
	var dens=document.getElementById('dens').value;
	if(document.getElementById('nodes').value==''){
            document.getElementById('nodes').value=0;
	}
	cn=document.getElementById('nodes').value;
	if(document.getElementById('mindeg').value==''){
            document.getElementById('mindeg').value='0';
	}else if(Number(document.getElementById('mindeg').value)<0){
            document.getElementById('mindeg').value='0';
	}
	if(document.getElementById('maxdeg').value==''){
            document.getElementById('maxdeg').value=cn;
	}else if(Number(document.getElementById('mindeg').value)<0){
            document.getElementById('maxdeg').value=cn;
	}
	if(Number(document.getElementById('mindeg').value > Number(document.getElementById('maxdeg').value))){
            var t=document.getElementById('mindeg').value;
            document.getElementById('mindeg').value=document.getElementById('maxdeg').value;
            document.getElementById('maxdeg').value=t;
	}
	mind=document.getElementById('mindeg').value;
	maxd=document.getElementById('maxdeg').value;
	var dd=Number(maxd)-Number(mind);
	var temp=true;
	
	while(nn<=cn){
            if(c){
                c=false;
                ar2=[];
                for(var i=0;i<ar1.length;i++){
                    for(var j1=0;j1<Number(mind);j1++){
                        nn++;
                        if(Number(nn)<=Number(cn)){
                            cr(ar1[i],nn,'1');
                            ar2.push(nn);
                        }
                    }
		for(var g=0;g<dd;g++){
                    var tempr=Math.random();
                    if(Number(tempr)<Number(dens)){
                        nn++;
                        if(Number(nn)<=Number(cn)){
                            cv++;
                            cr(ar1[i],nn,'1');
                            ar2.push(nn);
                        }else{
                            break;
                        }
                    }
		}
            }
	}else{
            c=true;
            ar1=[];
            for(var i=0;i<ar2.length;i++){
                for(var j=0;j<Number(mind);j++){
                    nn++;
                    if(Number(nn)<=Number(cn)){
			cr(ar2[i],nn,'1');
			ar1.push(nn);
                    }
		}
		
                for(var g=0;g<dd;g++){
                    var tempr=Math.random();
                    if(Number(tempr)<Number(dens)){
                        nn++;
                        if(Number(nn)<=Number(cn)){
                            cv++;
                            cr(ar2[i],nn,'1');
                            ar1.push(nn);
                        }else{
                            break;
                        }
                    }
                }
            }
	}
	}
textbox=crd+'c '+cn+' nodes,'+cv+' edges,'+'\n'+'p \n'+textbox;
txtdmac();
}
function geng(){
textbox='';
cv=0;
var dens=document.getElementById('dens').value;
cn=document.getElementById('nodes').value;
var n=(Number(cn))+1;
for(var i=1;i<n;i++){
    if(tp=='undir' || tp=='tree'){
	for(var g=i;g<n;g++){
            if(i!=g){
                var temp=Math.random();
                if(temp<Number(dens)){
                    cv++;
                    cr(i,g,'1');
                }
            }
	}
    }
    else{
        for(var g=1;g<n;g++){
            if(i!=g){
                var temp=Math.random();
                if(temp<Number(dens)){
                    cv++;
                    cr(i,g,'1');
                }
            }
        }
    }
}
var ad=Number(cv)/Number(cn);
textbox=crd+'c '+cn+' nodes,'+cv+' edges,'+ad+' average degree\n'+'p \n'+textbox;
txtdmac();
}
function p1(){
document.getElementById('thelinkdm').style.display = 'none';
document.getElementById('thelink').style.display = 'none';
}
function p(){
p1();

if(tp=='tree'){
    document.getElementById('mindeg').style.display = 'block';
    document.getElementById('maxdeg').style.display = 'block';
    document.getElementById('degm').style.display = 'block';
}
else if (tp=='dir'){
    document.getElementById('mindeg').style.display = 'none';
    document.getElementById('maxdeg').style.display = 'none';
    document.getElementById('degm').style.display = 'none';
}
else if (tp=='undir'){
    document.getElementById('mindeg').style.display = 'none';
    document.getElementById('maxdeg').style.display = 'none';
    document.getElementById('degm').style.display = 'none';
}
}

function txtdmac() {
document.getElementById('thelinkdm').style.display = 'block';
var textFile = null,
  makeTextFile = function (text) {
    var data = new Blob([text], {type: 'text/plain'});
    if (textFile !== null) {
      window.URL.revokeObjectURL(textFile);
    }
    textFile = window.URL.createObjectURL(data);
    return textFile;
  };
    var link = document.getElementById('thelinkdm');
	if(tp=='dir'){
            document.getElementById('thelinkdm').download='RandomGraph.Directed';
	}else if(tp=='undir'){
            document.getElementById('thelinkdm').download='RandomGraph.Undirected';
	}else if(tp=='tree'){
            document.getElementById('thelinkdm').download='RandomGraph.Tree';
	}
    link.href = makeTextFile(textbox);
}



function dim2ev(){
    for(i1=0;i1<dimac.length;i1++){
        var t=dimac[i1].split(" ");
        if(t[0]==='e'){
            nodes=Math.max(nodes,t[1], t[2]);
            var temp1=coder((t[1]-1), (t[2]-1));
            temp.push(temp1);
        }
    }

    var edges=nodes*(nodes-1)/2;
    ev=Array(edges).fill(0);
    
    for(i2=0;i2<temp.length;i2++){
        ev[temp[i2]]=1;
    }
    document.getElementById('thelink').style.display = 'block';
}

function txt() {
    var textFile = null;
    makeTextFile = function (ev) {
        var data = new Blob([ev], {type: 'text/plain'});
        if (textFile !== null) {
            window.URL.revokeObjectURL(textFile);
        }
        textFile = window.URL.createObjectURL(data);
        return textFile;
    };

var link = document.getElementById('thelink');
document.getElementById('thelink').download='graph.ev';
link.href = makeTextFile(ev);

if(tp=='dir'){
    document.getElementById('thelink').style.display = 'none';
}
}

document.getElementById('mindeg').style.display = 'none';
document.getElementById('maxdeg').style.display = 'none';
document.getElementById('degm').style.display = 'none';